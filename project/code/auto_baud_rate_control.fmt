        CONSTANT counter_compare_treshold, 10
        CONSTANT led_output, 01               ; port01 used for output
        CONSTANT data_input, 01               ; port01 used for input
        JUMP init
  init: 
        LOAD s0, 00                           ; couner for loop 1
        LOAD s1, counter_compare_treshold     ; load constant value to reg s1
        LOAD s2, 60
        LOAD s3, 00                           ; reg for outputs
        LOAD s4, 01                           ; const 01
        LOAD s5, FF                           ; const FF
        LOAD s6, 00                           ; counter for loop 2
        INPUT s1, data_input                  ; load data imput to register s1
        OUTPUT s5, led_output
        JUMP loop_1
loop_1: 
        OUTPUT s5, led_output
        AND s4, s4                            ; clear CARRY flag
        ADD s0, 01                            ;
        LOAD s6, 00                           ; reser r6 reg
        COMPARE s1, s0
        JUMP C, loop_2                        ; go to loop_2 sub
        JUMP loop_1                           ; single loop end
loop_2: 
        OUTPUT s4, led_output
        AND s4, s4                            ; clear CARRY flag
        ADD s6, 01                            ;
        LOAD s0, 00                           ; reset r0 reg
        COMPARE s1, s6
        JUMP C, loop_1                        ; go to loop_2 sub
        JUMP loop_2                           ; single loop end
   end: 
        JUMP loop_1
